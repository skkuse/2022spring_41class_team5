안녕하세요, 저희는 이은석 교수님의 소프트웨어공학개론 수업을 수강하는 Team5입니다. 본 실습은 파이썬을 이용하여 개/고양이 Classifier를 만들기까지 필요한 내용들의 학습을 위한 실습을 제공하며, 총 6개의 목차를 가지고 있습니다.


이번 실습에서는 파이썬의 기초적인 자료형부터 설명을 드리겠습니다. 파이썬은 크게 7가지 자료형을 가지고 있습니다. 이들은 각각 숫자형, 문자열 자료형, 리스트 자료형, 튜플 자료형, 딕셔너리 자료형, 집합 자료형, 불 자료형 입니다. 각각에 대해 살펴보도록 하겠습니다. 이번 실습에서는 개/고양이 classifier에 필요한 숫자형, 문자열 자료형, 리스트 자료형, 튜플 자료형, 불 자료형에 대해서만 먼저 다뤄보겠습니다.


1) 숫자형 
숫자형이란 숫자 형태로 이루어진 자료형으로 123같은 정수나 12.34 같은 실수 등이 있습니다. 
먼저 정수형(Integer) 자료형은 정수를 뜻하는 숫자형 자료형입니다. 다음 예는 123이라는 정수를 a라는 변수에 대입하는 코드입니다.

a=123

실수형(Floating-point) 자료형은 소수점이 포함된 숫자를 뜻합니다. 다음은 12.3이라는 실수를 a라는 변수에 대입하는 코드입니다.

a=12.3


2) 문자열 자료형
문자열(String)이란 문자,단어 등으로 구성된 문자들의 집합을 의미합니다. 문자열을 만드는 방법은 총 4가지가 있습니다.

- 큰따옴표(")로 감싸기
"Life is too short, You need Python"
- 작은따옴표(')로 감싸기
'Life is too short, You need Python'
- 큰따옴표 3개(""")를 연속으로 사용하여 감싸기
"Life is too short, You need Python"
- 작은따옴표 3개((''')를 연속으로 사용하여 감싸기
'''Life is too short, You need Python'''

파이썬에서는 문자열을 더하거나 곱할 수 있습니다. 다른 언어에서는 쉽게 찾아볼 수 없는 재미있는 기능으로, 우리 생각을 그대로 반영해주는 파이썬만의 장점이라고 할 수 있습니다.

먼저 문자열을 더하면(+) 문자열이 연결됩니다.

head='python'
tail=' is fun!'
head+tail

(결과)  'python is fun!'

문자열을 숫자와 곱하면 문자열이 여러번 반복됩니다.

'python'*2 

(결과)  'pythonpython'

파이썬은 문자열에서 원하는 문자에 접근하거나 문자열을 잘라내기 위해 인덱싱(Indexing)과 슬라이싱(Slicing)기능을 제공합니다. 이를 사용하는 방법은 각각 다음과 같습니다.

문자열의 접근하고 싶은 문자의 순서(첫번째 문자의 순서는 0입니다. 이 숫자를 인덱스라고 합니다)에 해당하는 숫자를 이용하여 인덱싱을 할 수 있습니다.

a="Life is too short, You need Python"
a[3]

(결과)  'e'

따라서 아래 예시처럼 문자열에 [시작번호:끝번호]를 붙이면 문자열의 원하는 부분만 잘라낼 수 있습니다. 이때 끝번호는 잘라낸 문자열에 포함되지 않습니다.

a="Life is too short, You need Python"
a[0:4]

a='Life'

파이썬은 문자열 안의 특정한 값을 바꾸어야할 경우가 있을때 이것을 가능하게 해주는 포매팅(Formatting)기법을 제공합니다.

"I eat %d apples" % 3

(결과)  "I eat 3 apples"

바꾸어야하는 자료형에 따라 %뒤에 붙는 문자가 다른데, 자료형이 문자열인 경우 %s를, 문자 1개(Character)인 경우 %c를, 정수인 경우 %d를, 실수인 경우 %f를 사용합니다.

또한 format함수를 사용하여 다음과 같이 포맷팅을 할 수도 있습니다.

"I eat {0} apples".format(3)

(결과)  "I eat 3 apples"


3) 리스트 자료형
리스트는 여러 자료형을 보관할 수 있는 자료형입니다. 리스트 자료형은 요소로 숫자형 자료형을 가질 수도 있고, 문자열 자료형도 가질 수 있으며 심지어 리스트 자료형을 가질 수도 있습니다. 아래의 코드를 통해 리스트의 모습을 관찰할 수 있습니다.

a=[1,2,'Life',['is','short']]

리스트는 문자열처럼 인덱싱과 슬라이싱 기능을 제공합니다.

a=[1,2,3]
a[0]
a[0:2]

(결과) 1
      [1,2]


또한 문자열처럼 더하기와 곱셈 연산도 제공합니다.

a=[1,2,3]
b=[4,5,6]
a+b
a*2

(결과) [1,2,3,4,5,6], [1,2,3,1,2,3]
 
리스트는 리스트 내 요소들의 값을 추가/삭제 하는 함수를 제공합니다. 각 코드를 직접 실행하며 결과를 확인해보시길 바랍니다.

a=[1,2,3]
del a[1]
a.append(4)

(결과) [1,3] [1,3,4]

이 외에도 리스트는 여러가지 기능을 제공합니다. 아래에서 그 기능을 확인하고 직접 실습을 해보시길 바랍니다.
- del : 리스트의 요소를 삭제
- append : 리스트에 요소를 추가
- sort : 리스트 정렬
- reverse : 리스트를 역순으로 뒤집어 줌
- index : 리스트 내 요소의 위치 값(인덱스) 반환
- insert : 리스트 내 요소를 원하는 위치에 추가
- remove : 리스트 내 원하는 요소를 삭제
- pop : 리스트의 맨 마지막 요소를 가져오고 그 요소는 삭제
- count : 리스트 안에 존재하는 요소의 숫자를 셈
- extend : 리스트끼리 합쳐줌(+와 동일)


4) 튜플 자료형
튜플 자료형은 아래의 특징 외에는 리스트와 거의 비슷합니다.
- 튜플은 ()으로 둘러쌉니다.
- 튜플은 내부의 값을 바꿀 수 없습니다.

튜플도 마찬가지로 덧셈(+), 곱셈(*), 인덱싱, 슬라이싱 기능을 제공합니다.

a=(1,2,3)
b=(4,5,6)
a+b
a*2
a[0]
a[0:2]

(결과) (1,2,3,4,5,6) (1,2,3,1,2,3) 1 (1,2)

5) 불 자료형
불(bool) 자료형이랑 참(True)과 거짓(False)를 나타내는 자료형입니다. 불 자료형은 두가지 값만을 가질 수 있습니다. 

a=2>1
print(a)

(결과) True

자료형마다 참과 거짓이 존재합니다. 조금 이상하게 들리지만 이는 매우 중요한 특징이며 실제로도 자주 쓰입니다. 아래에서 자료형이 참인 경우와 거짓인 경우를 확인하실 수 있습니다. 
- 문자열: "python"=True, ""=False
- 리스트: [1,2,3]=True, []=False
- 튜플: (1,2,3)=True, ()=False
- 숫자형: 0이 아닌 숫자=True, 0=False
즉, 쉽게 생각하면 0이거나 비어있으면 False, 그렇지 않다면 True의 값을 가집니다.  


여기까지 파이썬에서 제공하는 기초적인 자료형과 그들의 특징에 대해 알아보았습니다. 아래의 실습 문제를 진행해주세요.

1. 문자열 "Life is short"를 슬라이싱을 이용하여 "Life"으로 만들어주세요.

2. [3,1,5,4,2] 리스트를 [5,4,3,2,1]로 내림차순으로 정렬해주세요.

3.(1,2,3) 튜플에 값 4를 추가하여 (1,2,3,4)로 만들어주세요.








